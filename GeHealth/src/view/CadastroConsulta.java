/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import funcao.ConsultaDao;
import funcao.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.Consulta;
import model.Especialidade;
import model.Paciente;
import model.ProfissionalSaude;

/**
 *
 * @author Marcos
 */
public class CadastroConsulta extends javax.swing.JFrame {

    /**
     * Creates new form CadastroConsulta
     */
    public CadastroConsulta() {
        initComponents();

        preencherComboBoxPaciente();
        preencherComboBoxProfissional();
        preencherComboBoxEspecialidade();
    }

    private ConsultaDao consultadao; // Atributo para armazenar a instância

    public void setConsultaDao(ConsultaDao consultadao) {
        this.consultadao = consultadao;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlGeral = new javax.swing.JPanel();
        pnlSuperior = new javax.swing.JPanel();
        lblCadastroConsulta = new javax.swing.JLabel();
        pnlInferior = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        pnlCentro = new javax.swing.JPanel();
        cmbEspecialidade = new javax.swing.JComboBox<>();
        txtValor = new javax.swing.JTextField();
        txtDataConsulta = new javax.swing.JTextField();
        cmbProfissional = new javax.swing.JComboBox<>();
        cmbPaciente = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservacoes = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Consulta");
        setName("CadastroConsulta"); // NOI18N

        pnlGeral.setBackground(new java.awt.Color(217, 217, 217));

        pnlSuperior.setBackground(new java.awt.Color(77, 128, 133));

        lblCadastroConsulta.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblCadastroConsulta.setText("Cadastro de Consulta");

        javax.swing.GroupLayout pnlSuperiorLayout = new javax.swing.GroupLayout(pnlSuperior);
        pnlSuperior.setLayout(pnlSuperiorLayout);
        pnlSuperiorLayout.setHorizontalGroup(
            pnlSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSuperiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCadastroConsulta)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSuperiorLayout.setVerticalGroup(
            pnlSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSuperiorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCadastroConsulta)
                .addContainerGap())
        );

        pnlInferior.setBackground(new java.awt.Color(217, 217, 217));
        pnlInferior.setLayout(new java.awt.GridBagLayout());

        btnSalvar.setBackground(new java.awt.Color(77, 128, 133));
        btnSalvar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 52;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 6, 35);
        pnlInferior.add(btnSalvar, gridBagConstraints);

        btnLimpar.setBackground(new java.awt.Color(123, 128, 124));
        btnLimpar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 73;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 519, 6, 0);
        pnlInferior.add(btnLimpar, gridBagConstraints);

        pnlCentro.setBackground(new java.awt.Color(217, 217, 217));

        cmbEspecialidade.setBackground(new java.awt.Color(217, 217, 217));
        cmbEspecialidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbEspecialidade.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Especialidade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        cmbEspecialidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEspecialidadeActionPerformed(evt);
            }
        });

        txtValor.setBackground(new java.awt.Color(217, 217, 217));
        txtValor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtValor.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Valor (R$)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        txtValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorActionPerformed(evt);
            }
        });

        txtDataConsulta.setBackground(new java.awt.Color(217, 217, 217));
        txtDataConsulta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDataConsulta.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Data da Consulta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        txtDataConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataConsultaActionPerformed(evt);
            }
        });

        cmbProfissional.setBackground(new java.awt.Color(217, 217, 217));
        cmbProfissional.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbProfissional.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Profissional Saúde", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        cmbProfissional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProfissionalActionPerformed(evt);
            }
        });

        cmbPaciente.setBackground(new java.awt.Color(217, 217, 217));
        cmbPaciente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbPaciente.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        cmbPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPacienteActionPerformed(evt);
            }
        });

        txtObservacoes.setBackground(new java.awt.Color(217, 217, 217));
        txtObservacoes.setColumns(20);
        txtObservacoes.setRows(5);
        txtObservacoes.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Observações"));
        jScrollPane1.setViewportView(txtObservacoes);

        javax.swing.GroupLayout pnlCentroLayout = new javax.swing.GroupLayout(pnlCentro);
        pnlCentro.setLayout(pnlCentroLayout);
        pnlCentroLayout.setHorizontalGroup(
            pnlCentroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCentroLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnlCentroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlCentroLayout.createSequentialGroup()
                        .addComponent(txtDataConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCentroLayout.setVerticalGroup(
            pnlCentroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCentroLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(cmbPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCentroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDataConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlGeralLayout = new javax.swing.GroupLayout(pnlGeral);
        pnlGeral.setLayout(pnlGeralLayout);
        pnlGeralLayout.setHorizontalGroup(
            pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlSuperior, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlInferior, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
            .addComponent(pnlCentro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlGeralLayout.setVerticalGroup(
            pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeralLayout.createSequentialGroup()
                .addComponent(pnlSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCentro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlGeral, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbEspecialidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEspecialidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbEspecialidadeActionPerformed

    private void txtValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorActionPerformed

    private void txtDataConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataConsultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataConsultaActionPerformed

    private void cmbProfissionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProfissionalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProfissionalActionPerformed

    private void cmbPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPacienteActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            // Validação básica antes de salvar
            if (txtDataConsulta.getText().trim().isEmpty() || txtValor.getText().trim().isEmpty()) {

                JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos obrigatórios.",
                        "Campos obrigatórios", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Criando objeto Consulta
            Consulta consulta = new Consulta();

            // Corrigido: pegando os objetos reais dos ComboBoxes
            Paciente pacienteSelecionado = (Paciente) cmbPaciente.getSelectedItem();
            ProfissionalSaude profissionalSelecionado = (ProfissionalSaude) cmbProfissional.getSelectedItem();
            Especialidade especialidadeSelecionada = (Especialidade) cmbEspecialidade.getSelectedItem();

            // Validação da data
            String dataConsulta = txtDataConsulta.getText().trim();
            String dataFormatada = validarEFormatarData(dataConsulta);
            if (dataFormatada == null) {
                JOptionPane.showMessageDialog(this, "Data de consulta inválida.");
                return;
            }
            // Atribuindo os dados corretamente
            consulta.setPaciente(pacienteSelecionado);
            consulta.setProfissionalSaude(profissionalSelecionado);
            consulta.setEspecialidade(especialidadeSelecionada);
            consulta.setDataConsulta(dataFormatada);  // Já validada

            // Tratando possível erro de conversão para double
            try {
                double valor = Double.parseDouble(txtValor.getText().replace(",", "."));
                consulta.setValor(valor);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Valor inválido. Digite um número válido para o valor da consulta.",
                        "Erro de valor", JOptionPane.ERROR_MESSAGE);
                txtValor.requestFocus();
                return;
            }

            consulta.setObservacao(txtObservacoes.getText());

            // Salvando
            if (consultadao.conectar()) {
                if (consultadao.salvar(consulta) == 1) { // Use a instância recebida
                    consultadao.desconectar();
                    dispose();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao salvar a consulta.",
                        "Erro", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Ocorreu um erro inesperado: " + ex.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace(); // Log no console
        }

    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed

        // Limpa os campos de texto
        txtDataConsulta.setText("");
        txtObservacoes.setText("");
        txtValor.setText(""); // Campo de valor em double

        // Reseta as combo boxes para a primeira opção (índice 0)
        cmbPaciente.setSelectedIndex(0);
        cmbProfissional.setSelectedIndex(0);
        cmbEspecialidade.setSelectedIndex(0);

        // Define o foco no primeiro campo
        cmbPaciente.requestFocus();
    }//GEN-LAST:event_btnLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroConsulta().setVisible(true);
            }
        });
    }

    private void preencherComboBoxEspecialidade() {
        javax.swing.DefaultComboBoxModel modelo = new javax.swing.DefaultComboBoxModel();

        EspecialidadeDao listarEsp = new EspecialidadeDao();
        if (listarEsp.conectar()) {
            for (Especialidade esp : listarEsp.listar()) {
                modelo.addElement(esp);
            }
        } else {
            System.out.println("Não foi possível conectar ao banco para listar especialidades.");
        }

        cmbEspecialidade.setModel(modelo);
    }

    private void preencherComboBoxProfissional() {
        javax.swing.DefaultComboBoxModel modelo = new javax.swing.DefaultComboBoxModel();

        ProfissionalSaudeDao psdao = new ProfissionalSaudeDao();
        if (psdao.conectar()) {
            for (ProfissionalSaude ps : psdao.listar()) {
                modelo.addElement(ps);
            }
        } else {
            System.out.println("Não foi possível conectar ao banco para listar profissionais.");
        }

        cmbProfissional.setModel(modelo);
    }

    private void preencherComboBoxPaciente() {
        javax.swing.DefaultComboBoxModel modelo = new javax.swing.DefaultComboBoxModel();

        PacienteDao pdao = new PacienteDao();
        if (pdao.conectar()) {
            for (Paciente p : pdao.listar()) {
                modelo.addElement(p);
            }
        } else {
            System.out.println("Não foi possível conectar ao banco para listar pacientes.");
        }

        cmbPaciente.setModel(modelo);
    }

    public String validarEFormatarData(String data) {
        String limpa = data.replaceAll("\\D", ""); // remove tudo que não é número
        if (limpa.length() != 8) {
            return null;
        }

        try {
            var entrada = new SimpleDateFormat("ddMMyyyy");
            entrada.setLenient(false);
            var dataValida = entrada.parse(limpa);

            var saida = new SimpleDateFormat("yyyy-MM-dd");
            return saida.format(dataValida);
        } catch (ParseException e) {
            return null;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cmbEspecialidade;
    private javax.swing.JComboBox<String> cmbPaciente;
    private javax.swing.JComboBox<String> cmbProfissional;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCadastroConsulta;
    private javax.swing.JPanel pnlCentro;
    private javax.swing.JPanel pnlGeral;
    private javax.swing.JPanel pnlInferior;
    private javax.swing.JPanel pnlSuperior;
    private javax.swing.JTextField txtDataConsulta;
    private javax.swing.JTextArea txtObservacoes;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
